<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>clientNames</key>
	<dict>
		<key>iOS</key>
		<string>Emu iOS</string>
		<key>Android</key>
		<string>Emu Android</string>
	</dict>
	<key>token</key>
	<dict>
		<key>testToken</key>
		<string>090553b00ef0bbe21ba634c651dc272f</string>
		<key>productionToken</key>
		<string>25847b0e1fc41bc665d204be1a2c96ee</string>
	</dict>
	<key>superParams</key>
	<dict>
		<key>emuNameUsedForPreviewOnOnboarding</key>
		<dict>
			<key>androidRemark</key>
			<string>did not implement yet</string>
			<key>description</key>
			<string>The name of the emu used on the preview stage in the recorder onboarding flow (when user opened app for the first time)</string>
		</dict>
		<key>notificationsSettings</key>
		<dict>
			<key>androidRemark</key>
			<string>did not implement yet</string>
			<key>description</key>
			<string>&lt;number&gt; - Number indicating the user&apos;s current UIUserNotificationSettings</string>
		</dict>
		<key>firstLaunchDate</key>
		<dict>
			<key>av</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>&lt;date&gt; - The date of the first time the app was launched by the user</string>
		</dict>
		<key>deviceModel</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>The model of the user&apos;s device</string>
		</dict>
		<key>clientName</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>A mnemonic name of the application. Currently: &quot;Emu iOS&quot;. Used in case we will create white labels of the Emu app in the future.</string>
		</dict>
		<key>localizationPreference</key>
		<dict>
			<key>av</key>
			<string>did not implement yet</string>
			<key>description</key>
			<string>The localized language preference on the user&apos;s device (good to know for the time we will want to localize the app).</string>
		</dict>
		<key>buildVersion</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>The long build version string in the following format:
&lt;big&gt;.&lt;small&gt;.&lt;build#&gt; for production application.
or
&lt;big&gt;.&lt;small&gt;.&lt;build#&gt;.t for test application.</string>
		</dict>
		<key>launchesCount</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>The number of times the user launched the application.</string>
		</dict>
		<key>didBecomeActiveCount</key>
		<dict>
			<key>androidRemark</key>
			<string>cannot know when app is moved to background and comes back</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>The number of times the app did become active</string>
		</dict>
		<key>numberOfSharesUsingAppCount</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>The number of times the user shared an emu from within the app.</string>
		</dict>
		<key>didEverShareUsingApp</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>true if numberOfSharesUsingAppCount &gt; 0</string>
		</dict>
		<key>numberOfVideoSharesUsingAppCount</key>
		<dict>
			<key>androidRemark</key>
			<string>video not implemented yet</string>
			<key>description</key>
			<string>The number of times the user shared an emu rendered as video from within the app.</string>
		</dict>
		<key>didEverShareVideoUsingApp</key>
		<dict>
			<key>androidRemark</key>
			<string>video not implemented yet</string>
			<key>description</key>
			<string>true if numberOfVideoSharesUsingAppCount &gt; 0</string>
		</dict>
		<key>numberOfEngagedVideoSharesUsingAppCount</key>
		<dict>
			<key>androidRemark</key>
			<string>video not implemented yet</string>
			<key>description</key>
			<string>The number of times the user shared an emu rendered as video from within the app and the user also played around with video settings like numner pf loops and loop type.</string>
		</dict>
		<key>didEverShareEngagedVideoUsingApp</key>
		<dict>
			<key>androidRemark</key>
			<string>video not implemented yet</string>
			<key>description</key>
			<string>true if numberOfEngagedVideoSharesUsingAppCount &gt; 0</string>
		</dict>
		<key>numberOfApprovedRetakes</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>The number of times the user pressed &quot;I love it&quot; and confirmed the take in the recorder (not counting oboarding recorder)</string>
		</dict>
		<key>didEverFinishARetake</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>Did the user ever finished a second retake. Opened the recorder and finished the recorder flow (disregarding oboarding)</string>
		</dict>
		<key>numberOfPackagesNavigated</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>The number of times the user navigated to a different package in the app.</string>
		</dict>
		<key>didEverNavigateToAnotherPackage</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>True if the user ever navigated to another package in the app.</string>
		</dict>
		<key>inMessangerContext</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>True if in the context of a messanger conversation.</string>
		</dict>
		<key>numberOfKBAppearancesCount</key>
		<dict>
			<key>androidRemark</key>
			<string>keyboard not implemented yet</string>
			<key>description</key>
			<string>The number of times keyboard did appear.</string>
		</dict>
		<key>didKeyboardEverAppear</key>
		<dict>
			<key>androidRemark</key>
			<string>keyboard not implemented yet</string>
			<key>description</key>
			<string>True if the keyboard ever appeared.</string>
		</dict>
		<key>numberOfAlphaNumericKBAppearancesCount</key>
		<dict>
			<key>androidRemark</key>
			<string>keyboard not implemented yet</string>
			<key>description</key>
			<string>The number of times the alpha numeric keyboard was shown.</string>
		</dict>
		<key>didAlphaNumericKBEverAppear</key>
		<dict>
			<key>androidRemark</key>
			<string>keyboard not implemented yet</string>
			<key>description</key>
			<string>True if numberOfAlphaNumericKBAppearancesCount&gt;0</string>
		</dict>
		<key>numberOfKBCopyEmuCount</key>
		<dict>
			<key>androidRemark</key>
			<string>keyboard not implemented yet</string>
			<key>description</key>
			<string>The number of times the user pressed an emu in the keyboard and copied to clipboard</string>
		</dict>
		<key>markedAsFavCount</key>
		<dict>
			<key>description</key>
			<string>The number of times the user added an emu to the fav list (unfav an emu doesn&apos;t subtract from this value)</string>
		</dict>
		<key>didEverMarkedAnyEmuAsFav</key>
		<dict>
			<key>description</key>
			<string>true if the user ever marked an emu as fav</string>
		</dict>
	</dict>
	<key>personDetails</key>
	<dict>
		<key>emuNameUsedForPreviewOnOnboarding</key>
		<dict>
			<key>androidRemark</key>
			<string>not implemented yet</string>
			<key>description</key>
			<string>&lt;string&gt; - The name of the emu used on the preview stage in the recorder onboarding flow (when user opened app for the first time)</string>
		</dict>
		<key>firstLaunchDate</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>&lt;date&gt; - The date of the first time the user launched from any device.</string>
		</dict>
		<key>lastLaunchDate</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>&lt;date&gt; - The date of the last time the user launched from any device.</string>
		</dict>
		<key>numberOfBecameActive</key>
		<dict>
			<key>av</key>
			<string>1.0.9</string>
			<key>description</key>
			<string>The number of times an app became active for the user from any device.</string>
		</dict>
		<key>numberOfSharesUsingAppCount</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>The number of times the user shared an emu from within the app from any device.</string>
		</dict>
		<key>didEverShareUsingApp</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>true if numberOfSharesUsingAppCount &gt; 0</string>
		</dict>
		<key>numberOfApprovedRetakes</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>The number of times the user pressed &quot;I love it&quot; and confirmed the take in the recorder (not counting oboarding recorder) from any device.</string>
		</dict>
		<key>didEverFinishARetake</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>Did the user ever finished a second retake. Opened the recorder and finished the recorder flow (disregarding oboarding) from any device.</string>
		</dict>
		<key>numberOfKBAppearancesCount</key>
		<dict>
			<key>androidRemark</key>
			<string>not implemented yet</string>
			<key>description</key>
			<string>The number of times keyboard did appear for the user from any device.</string>
		</dict>
		<key>lastUsedClient</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>The name of the client used: emu-android or emu-ios</string>
		</dict>
		<key>didKeyboardEverAppear</key>
		<dict>
			<key>androidRemark</key>
			<string>not implemented yet</string>
			<key>description</key>
			<string>True if the keyboard ever appeared for the user from any device.</string>
		</dict>
		<key>numberOfKBCopyEmuCount</key>
		<dict>
			<key>androidRemark</key>
			<string>not implemented yet</string>
			<key>description</key>
			<string>The number of times the user pressed an emu in the keyboard and copied to clipboard from any device.</string>
		</dict>
	</dict>
	<key>events</key>
	<dict>
		<key>DeepLink:code</key>
		<dict>
			<key>v</key>
			<string>2.0.6</string>
			<key>description</key>
			<string>User opened the app using a deep link with a code, initiating some action in the app.</string>
			<key>params</key>
			<dict>
				<key>linkType</key>
				<string>&lt;string&gt; - the type of link and related action:

	unhide packages - user opened a deep link with a code for requesting server to unhide one or more hidden packages</string>
				<key>code</key>
				<string>&lt;string&gt; - the code passed with the link</string>
			</dict>
			<key>fabric</key>
			<true/>
		</dict>
		<key>IAPTransaction</key>
		<dict>
			<key>v</key>
			<string>2.1.2</string>
			<key>description</key>
			<string>User successfully purchased a product</string>
			<key>params</key>
			<dict>
				<key>productID</key>
				<string>&lt;string&gt; - the identifier of the product in itunes connect</string>
				<key>productType</key>
				<string>&lt;string&gt; - the type of product purchased. Currently only support &quot;hdPackContent&quot; but more options will be available in the future</string>
				<key>transactionID</key>
				<string>&lt;string&gt; - the id of the transaction</string>
				<key>productName</key>
				<string>&lt;string&gt; - some human readable name of the product. Can be a package name etc.</string>
				<key>price</key>
				<string>&lt;number&gt; - the amount of the transaction (can be in different currencies. check the currency param)</string>
				<key>currency</key>
				<string>&lt;string&gt; - the currency code of the amount stated in the price parameter.</string>
				<key>success</key>
				<string>&lt;bool&gt; - transaction successful or not</string>
				<key>restoredPurchase</key>
				<string>&lt;bool&gt; - YES on restored purchase event.</string>
				<key>errorDescription</key>
				<string>&lt;string&gt; - error description if any (only when success == NO)</string>
			</dict>
			<key>fabric</key>
			<true/>
		</dict>
		<key>IAPProductPresented</key>
		<dict>
			<key>v</key>
			<string>2.1.4</string>
			<key>description</key>
			<string>Purchase details presented to the user</string>
			<key>params</key>
			<dict>
				<key>productID</key>
				<string>&lt;string&gt; - the identifier of the product in itunes connect</string>
				<key>originUI</key>
				<string>&lt;string&gt; - the origin user interface for this event</string>
				<key>productType</key>
				<string>&lt;string&gt; - the type of product purchased. Currently only support &quot;hdPackContent&quot; but more options will be available in the future</string>
				<key>productName</key>
				<string>&lt;string&gt; - some human readable name of the product. Can be a package name etc.</string>
				<key>price</key>
				<string>&lt;number&gt; - the amount of the transaction (can be in different currencies. check the currency param)</string>
				<key>currency</key>
				<string>&lt;string&gt; - the currency code of the amount stated in the price parameter.</string>
			</dict>
		</dict>
		<key>IAPProductUserPressedPurchaseButton</key>
		<dict>
			<key>v</key>
			<string>2.1.4</string>
			<key>description</key>
			<string>User pressed a &quot;purchase product&quot; button.</string>
			<key>params</key>
			<dict>
				<key>productID</key>
				<string>&lt;string&gt; - the identifier of the product in itunes connect</string>
				<key>originUI</key>
				<string>&lt;string&gt; - the origin user interface for this event</string>
				<key>productType</key>
				<string>&lt;string&gt; - the type of product purchased. Currently only support &quot;hdPackContent&quot; but more options will be available in the future</string>
				<key>productName</key>
				<string>&lt;string&gt; - some human readable name of the product. Can be a package name etc.</string>
				<key>price</key>
				<string>&lt;number&gt; - the amount of the transaction (can be in different currencies. check the currency param)</string>
				<key>currency</key>
				<string>&lt;string&gt; - the currency code of the amount stated in the price parameter.</string>
			</dict>
		</dict>
		<key>DeepLink:alertUserChoice</key>
		<dict>
			<key>v</key>
			<string>2.0.6</string>
			<key>description</key>
			<string>After a user opened the app using a deep link, a choice was presented and the user chose an option.</string>
			<key>params</key>
			<dict>
				<key>linkType</key>
				<string>&lt;string&gt; - the type of link and related action:

	unhide packages - user opened a deep link with a code for requesting server to unhide one or more hidden packages</string>
				<key>code</key>
				<string>&lt;string&gt; - the code passed with the link</string>
				<key>userChoice</key>
				<string>&lt;string&gt; - user choice</string>
			</dict>
			<key>fabric</key>
			<true/>
		</dict>
		<key>Migration:hasPrefferedFootageAndCacheDirExists</key>
		<dict>
			<key>av</key>
			<string>1.3.0</string>
			<key>description</key>
			<string>User has preffered footage and cache dir</string>
		</dict>
		<key>Migration:noPrefferedFootage</key>
		<dict>
			<key>av</key>
			<string>1.3.0</string>
			<key>description</key>
			<string>User has no preffered footage</string>
		</dict>
		<key>Migration:needsMigration</key>
		<dict>
			<key>av</key>
			<string>1.3.0</string>
			<key>description</key>
			<string>User will perform migration</string>
		</dict>
		<key>ItemDetails:userPressedFootageButton</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>When user clicks replace footage button</string>
			<key>params</key>
			<dict>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
			</dict>
		</dict>
		<key>App:launched</key>
		<dict>
			<key>av</key>
			<string>1.0.9</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>The application was launched by the user.</string>
		</dict>
		<key>App:enteredBackground</key>
		<dict>
			<key>androidRemark</key>
			<string>not implemented yet</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>The application entered the background (user pressed home screen, changed to another app, etc.)</string>
		</dict>
		<key>App:reportingRendersCount</key>
		<dict>
			<key>v</key>
			<string>2.2.5</string>
			<key>description</key>
			<string>The application entered the background and it is reporting the total number of renders for this user and the number of renders since the last time the app entered FG.</string>
			<key>fabric</key>
			<true/>
			<key>params</key>
			<dict>
				<key>totalRendersCount</key>
				<string>&lt;number&gt; - The total number of rendered content for this user.</string>
				<key>rendersSinceLastAppEnteredFGCount</key>
				<string>&lt;number&gt; - The number of renders since the previous time the user entered the app</string>
			</dict>
		</dict>
		<key>App:enteredForeground</key>
		<dict>
			<key>androidRemark</key>
			<string>not implemented yet</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>The user launched or returned to the application.</string>
		</dict>
		<key>App:versionUpdated</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>av</key>
			<string>1.0.8</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>The application was launched with a higher version than the version it was launched with previously.</string>
			<key>params</key>
			<dict>
				<key>previousVersion</key>
				<string>&lt;string&gt; - the previous version the app was launched with</string>
				<key>currentVersion</key>
				<string>&lt;string&gt; - the current version the app was launched with</string>
			</dict>
		</dict>
		<key>App:didBecomeActive</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.2.7</string>
			<key>description</key>
			<string>The application did become active</string>
		</dict>
		<key>FBM:integration</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.2.2</string>
			<key>description</key>
			<string>Facebook messenger integration opened the app using a deep link.</string>
			<key>params</key>
			<dict>
				<key>linkType</key>
				<string>&lt;string&gt; - the type of link fb integration opened the app with. Possible value:
 cancel - user pressed cancel in fbm, after fbm was opened from Emu
 opened - user pressed Emu in the composer / discovery bar
 reply  - user pressed the reply button in fbm</string>
			</dict>
		</dict>
		<key>FBM:install</key>
		<dict>
			<key>av</key>
			<string>1.1.8</string>
			<key>v</key>
			<string>1.2.5</string>
			<key>description</key>
			<string>User without facebook messenger pressed the INSTALL FB Messenger option from our app.</string>
		</dict>
		<key>FBM:dismissedInstall</key>
		<dict>
			<key>av</key>
			<string>1.1.8</string>
			<key>v</key>
			<string>1.2.5</string>
			<key>description</key>
			<string>User without facebook messenger got a &quot;Install messenger&quot; alert, but chosen not to install.</string>
		</dict>
		<key>Notifications:userNotNow</key>
		<dict>
			<key>androidRemark</key>
			<string>not available yet</string>
			<key>v</key>
			<string>1.2.7</string>
			<key>description</key>
			<string>User asked if want to receive notifications and the user declined by pressing the &quot;Not Now&quot; button.</string>
		</dict>
		<key>Notifications:userOkay</key>
		<dict>
			<key>androidRemark</key>
			<string>not available yet</string>
			<key>v</key>
			<string>1.2.7</string>
			<key>description</key>
			<string>User asked if want to receive notifications and the user pressed OK.</string>
			<key>params</key>
			<dict>
				<key>afterConfirmation</key>
				<string>&lt;string&gt; - Indicates what happened after the user pressed the OK button. Possible values:</string>
			</dict>
		</dict>
		<key>Notifications:registrationSettings</key>
		<dict>
			<key>androidRemark</key>
			<string>not available yet</string>
			<key>v</key>
			<string>1.2.7</string>
			<key>description</key>
			<string>App delegate notifications registration change</string>
			<key>params</key>
			<dict>
				<key>notificationsSettings</key>
				<string>&lt;number&gt; - Number indicating the user&apos;s current UIUserNotificationSettings</string>
			</dict>
		</dict>
		<key>Notifications:userOpenedNotification</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.2.7</string>
			<key>description</key>
			<string>User opened a notification in notification center and laucnhed the app</string>
			<key>params</key>
			<dict>
				<key>text</key>
				<string>&lt;string&gt; - The text sent with the notification</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - (optional) The oid of the related package</string>
				<key>packageName</key>
				<string>&lt;string&gt; - (optional) The name of the related package</string>
				<key>notificationType</key>
				<string>&lt;string&gt; - The type of the notification: local,remote</string>
			</dict>
		</dict>
		<key>Settings:userOpenedSettingsApp</key>
		<dict>
			<key>androidRemark</key>
			<string>not implemented yet</string>
			<key>v</key>
			<string>1.2.7</string>
			<key>description</key>
			<string>User opened iOS settings application.</string>
			<key>params</key>
			<dict>
				<key>reason</key>
				<string>&lt;string&gt; - The reason the user asked to open the settings app.</string>
			</dict>
		</dict>
		<key>Rec:opened</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>The recorder screen was opened and just appeared on screen. The event will also include info about the flow option the recorder was opened for.</string>
			<key>params</key>
			<dict>
				<key>flowType</key>
				<string>&lt;string&gt; - the flow type definition the recorder was opened with. Possible values: 
 &apos;onboarding&apos; - recorder on boarding when app launched for the first time.
 &apos;retakeAll&apos; - user wanted to retake and use the footage to all unlocked emoticons
 &apos;retakePackage&apos; - user wanted to retake and use the footage to all unlocked emoticons in a package.
 &apos;retakeEmoticon&apos; - user wanted to retake and lock an emoticon to a specific footage taken for that emoticon.</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
			</dict>
		</dict>
		<key>Rec:userPressedRestartButton</key>
		<dict>
			<key>androidRemark</key>
			<string>do not have such button yet</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>The user pressed the restart button that causes the recorder to restart the flow of the recorder.</string>
		</dict>
		<key>Rec:refocus</key>
		<dict>
			<key>androidRemark</key>
			<string>not implemented yet</string>
			<key>v</key>
			<string>1.7.6</string>
			<key>description</key>
			<string>User requested to refocus + detect exposure + redetect background</string>
			<key>params</key>
			<dict>
				<key>pointX</key>
				<string>&lt;float&gt; - The x coordinate of the tap (normalized 0.0 - 1.0 values)
	0 - EMOnBoardingStageWelcome
    1 - EMOnBoardingStageAlign
    2 - EMOnBoardingStageExtractionPreview
    3 - EMOnBoardingStageRecording
    4 - EMOnBoardingStageFinishingUp
    5 - EMOnBoardingStageReview</string>
				<key>pointY</key>
				<string>&lt;float&gt; - The y coordinate of the tap (normalized 0.0 - 1.0 values)
	0 - EMOnBoardingStageWelcome
    1 - EMOnBoardingStageAlign
    2 - EMOnBoardingStageExtractionPreview
    3 - EMOnBoardingStageRecording
    4 - EMOnBoardingStageFinishingUp
    5 - EMOnBoardingStageReview</string>
				<key>pointString</key>
				<string>&lt;string&gt; - The (x,y) coordinate of the tap given as a string
	0 - EMOnBoardingStageWelcome
    1 - EMOnBoardingStageAlign
    2 - EMOnBoardingStageExtractionPreview
    3 - EMOnBoardingStageRecording
    4 - EMOnBoardingStageFinishingUp
    5 - EMOnBoardingStageReview</string>
				<key>origin</key>
				<string>&lt;string&gt; - How the user requested this to happen: &quot;exposure button&quot; or &quot;tapped preview&quot;</string>
			</dict>
		</dict>
		<key>Rec:userPressedAppButton</key>
		<dict>
			<key>androidRemark</key>
			<string>not pressable in android</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>user pressed (in recorder onboarding) the emu button (showing him an about emu message)</string>
			<key>params</key>
			<dict>
				<key>stage</key>
				<string>&lt;int&gt; - the stage this happened. Possible values:
	0 - EMOnBoardingStageWelcome
    1 - EMOnBoardingStageAlign
    2 - EMOnBoardingStageExtractionPreview
    3 - EMOnBoardingStageRecording
    4 - EMOnBoardingStageFinishingUp
    5 - EMOnBoardingStageReview</string>
			</dict>
		</dict>
		<key>Rec:userPressedCancelButton</key>
		<dict>
			<key>androidRemark</key>
			<string>in android it&apos;s back button</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string></string>
			<key>params</key>
			<dict>
				<key>stage</key>
				<string>&lt;int&gt; - the stage this happened. Possible values:
	0 - EMOnBoardingStageWelcome
    1 - EMOnBoardingStageAlign
    2 - EMOnBoardingStageExtractionPreview
    3 - EMOnBoardingStageRecording
    4 - EMOnBoardingStageFinishingUp
    5 - EMOnBoardingStageReview</string>
			</dict>
		</dict>
		<key>Rec:userPressedSwitchCameraButton</key>
		<dict>
			<key>androidRemark</key>
			<string>not implemented yet</string>
			<key>v</key>
			<string>1.7.6</string>
			<key>description</key>
			<string>user pressed the switch camera button.</string>
			<key>params</key>
			<dict>
				<key>stage</key>
				<string>&lt;int&gt; - the stage this happened. Possible values:
	0 - EMOnBoardingStageWelcome
    1 - EMOnBoardingStageAlign
    2 - EMOnBoardingStageExtractionPreview
    3 - EMOnBoardingStageRecording
    4 - EMOnBoardingStageFinishingUp
    5 - EMOnBoardingStageReview</string>
				<key>switchedTo</key>
				<string>&lt;string&gt; - the camera the user switched to (front / back)</string>
			</dict>
		</dict>
		<key>Rec:stageAlignStarted</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>The background detection feedback UI is presented to the user. User is asked to align to silhoutte and gets feedback about bad background.</string>
		</dict>
		<key>Rec:stageAlignUserPressedContinueWithBadBackground</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>The background detection feedback UI is presented to the user. User is asked to align to silhoutte and gets feedback about bad background.</string>
			<key>params</key>
			<dict>
				<key>timePassedSinceRecorderOpened</key>
				<string>&lt;interval&gt; - the time interval passed since the Rec:opened event.</string>
			</dict>
		</dict>
		<key>Rec:stageAlignGoodBackgroundSatisfied</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>description</key>
			<string>A threshold of good background was reached and fg extraction should start</string>
			<key>params</key>
			<dict>
				<key>timePassedSinceRecorderOpened</key>
				<string>&lt;interval&gt; - the time interval passed since the Rec:opened event.</string>
			</dict>
		</dict>
		<key>Rec:stageExtStarted</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>The FG extraction stage has started. BG detection UI is dismissed. User can use a record button when ready.</string>
			<key>params</key>
			<dict>
				<key>timePassedSinceRecorderOpened</key>
				<string>&lt;interval&gt; - the time interval passed since the Rec:opened event.</string>
				<key>goodBackgroundSatisfied</key>
				<string>&lt;boolean&gt; - true if good background satisfied and extraction started automatically. false if user pressed &quot;continue anyway&quot;.</string>
			</dict>
		</dict>
		<key>Rec:stageExtUserPressedRecord</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>User pressed the record button while real time extraction was in progress.</string>
			<key>params</key>
			<dict>
				<key>latestBackgroundMark</key>
				<string>&lt;int&gt; - The latest background detection mark before user pressed the record button.</string>
			</dict>
		</dict>
		<key>Rec:stageExtUserCanceledRecord</key>
		<dict>
			<key>androidRemark</key>
			<string>not implemented yet</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>User canceled recording (by pressing the record button when it was counting down)</string>
		</dict>
		<key>Rec:stageRecordingDidStart</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>Recording did start.</string>
			<key>params</key>
			<dict>
				<key>flowType</key>
				<string>&lt;string&gt; - the flow type definition the recorder was opened with. Possible values: 
 &apos;onboarding&apos; - recorder on boarding when app launched for the first time.
 &apos;retakeAll&apos; - user wanted to retake and use the footage to all unlocked emoticons
 &apos;retakePackage&apos; - user wanted to retake and use the footage to all unlocked emoticons in a package.
 &apos;retakeEmoticon&apos; - user wanted to retake and lock an emoticon to a specific footage taken for that emoticon.</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
				<key>timePassedSinceRecorderOpened</key>
				<string>&lt;interval&gt; - the time interval passed since the Rec:opened event.</string>
				<key>latestBackgroundMark</key>
				<string>&lt;int&gt; - The latest background detection mark before user pressed the record button.</string>
			</dict>
		</dict>
		<key>Rec:stageRecordingDidFinish</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>Recording did finish.</string>
			<key>params</key>
			<dict>
				<key>flowType</key>
				<string>&lt;string&gt; - the flow type definition the recorder was opened with. Possible values: 
 &apos;onboarding&apos; - recorder on boarding when app launched for the first time.
 &apos;retakeAll&apos; - user wanted to retake and use the footage to all unlocked emoticons
 &apos;retakePackage&apos; - user wanted to retake and use the footage to all unlocked emoticons in a package.
 &apos;retakeEmoticon&apos; - user wanted to retake and lock an emoticon to a specific footage taken for that emoticon.</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
				<key>timePassedSinceRecorderOpened</key>
				<string>&lt;interval&gt; - the time interval passed since the Rec:opened event.</string>
				<key>latestBackgroundMark</key>
				<string>&lt;int&gt; - The latest background detection mark before user pressed the record button.</string>
			</dict>
		</dict>
		<key>Rec:stageReviewUserPressedRetakeButton</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.1.0</string>
			<key>description</key>
			<string>When user asked if he likes the result he chose to try again and retake. You just can&apos;t please some people. :-(</string>
			<key>params</key>
			<dict>
				<key>userPressed</key>
				<string>&lt;string&gt; - (optional) the UI element the user pressed to try a different take (used in android where system back and retry button do the same thing)</string>
				<key>flowType</key>
				<string>&lt;string&gt; - the flow type definition the recorder was opened with. Possible values: 
 &apos;onboarding&apos; - recorder on boarding when app launched for the first time.
 &apos;retakeAll&apos; - user wanted to retake and use the footage to all unlocked emoticons
 &apos;retakePackage&apos; - user wanted to retake and use the footage to all unlocked emoticons in a package.
 &apos;retakeEmoticon&apos; - user wanted to retake and lock an emoticon to a specific footage taken for that emoticon.</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
				<key>timePassedSinceRecorderOpened</key>
				<string>&lt;interval&gt; - the time interval passed since the Rec:opened event.</string>
				<key>latestBackgroundMark</key>
				<string>&lt;int&gt; - The latest background detection mark before user pressed the record button.</string>
			</dict>
		</dict>
		<key>Rec:stageReviewUserPressedConfirmButton</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.1.0</string>
			<key>description</key>
			<string>When user asked if he likes the result he chose yes. Yeah! :-)</string>
			<key>params</key>
			<dict>
				<key>flowType</key>
				<string>&lt;string&gt; - the flow type definition the recorder was opened with. Possible values: 
 &apos;onboarding&apos; - recorder on boarding when app launched for the first time.
 &apos;retakeAll&apos; - user wanted to retake and use the footage to all unlocked emoticons
 &apos;retakePackage&apos; - user wanted to retake and use the footage to all unlocked emoticons in a package.
 &apos;retakeEmoticon&apos; - user wanted to retake and lock an emoticon to a specific footage taken for that emoticon.</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
				<key>timePassedSinceRecorderOpened</key>
				<string>&lt;interval&gt; - the time interval passed since the Rec:opened event.</string>
				<key>latestBackgroundMark</key>
				<string>&lt;int&gt; - The latest background detection mark before user pressed the record button.</string>
			</dict>
		</dict>
		<key>Rec:wasDismissed</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>Recorder was dismissed.</string>
			<key>params</key>
			<dict>
				<key>finishedFlow</key>
				<string>&lt;int&gt; - 0:user didn&apos;t finish the flow. 1:the user finished the flow.</string>
				<key>flowType</key>
				<string>&lt;string&gt; - the flow type definition the recorder was opened with. Possible values: 
 &apos;onboarding&apos; - recorder on boarding when app launched for the first time.
 &apos;retakeAll&apos; - user wanted to retake and use the footage to all unlocked emoticons
 &apos;retakePackage&apos; - user wanted to retake and use the footage to all unlocked emoticons in a package.
 &apos;retakeEmoticon&apos; - user wanted to retake and lock an emoticon to a specific footage taken for that emoticon.</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon (optional. only if recorder opened in the retakeEmoticon flow)</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package (sent even in onboarding according to the used package set in AppCFG)</string>
				<key>timePassedSinceRecorderOpened</key>
				<string>&lt;interval&gt; - the time interval passed since the Rec:opened event.</string>
				<key>latestBackgroundMark</key>
				<string>&lt;int&gt; - The latest background detection mark before user pressed the record button.</string>
			</dict>
		</dict>
		<key>Items:userPressedAppButton</key>
		<dict>
			<key>androidRemark</key>
			<string>not pressable yet</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>user pressed the emu button at the top and an &apos;about message&apos; was shown.</string>
		</dict>
		<key>Items:userPressedNavButton</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>user pressed the nav button and was given a list of options to choose from</string>
		</dict>
		<key>Items:userNavSelectionResetPack</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>user chosen to reset a pack and use the master footage for rendring all emoticons in package</string>
			<key>params</key>
			<dict>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
			</dict>
		</dict>
		<key>Items:userNavSelectionCancel</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>user pressed canceled when presented by choices (after pressing the nav button)</string>
		</dict>
		<key>Items:userPressedRetakeButton</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>user pressed the retake button while in the emoticons screen</string>
			<key>params</key>
			<dict>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
			</dict>
		</dict>
		<key>Items:userRetakeOption</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>user selected to retake with an option (for all emoticons or all in package)</string>
			<key>params</key>
			<dict>
				<key>retakeOption</key>
				<string>&lt;string&gt; - &apos;all&apos;:All emoticons in all packages. &apos;package&apos;:All emoticons in package.</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package (optional: </string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
			</dict>
		</dict>
		<key>Items:userRetakeCanceled</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>user pressed the emu button at the top and an &apos;about message&apos; was shown.</string>
		</dict>
		<key>Items:userSelectedItem</key>
		<dict>
			<key>av</key>
			<string>1.0.9</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>User selected a specific emu from the feed (item details screen will be opened)</string>
			<key>params</key>
			<dict>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
				<key>originUI</key>
				<string>&lt;string&gt; - the screen it happened in</string>
			</dict>
		</dict>
		<key>ItemDetails:userPressedRetakeButton</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string></string>
			<key>params</key>
			<dict>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
				<key>originUI</key>
				<string>&lt;string&gt; - the screen it happened in</string>
			</dict>
		</dict>
		<key>ItemDetails:userPressedShareButton</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>User pressed one of the share buttons in the emoticon screen.</string>
			<key>params</key>
			<dict>
				<key>shareMethod</key>
				<string>&lt;string&gt; - the name of the method of sharing (application name, save to camera roll etc)</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
				<key>sharedMediaType</key>
				<string>&lt;string&gt; - the media type that was shared: gif, video etc.</string>
				<key>originUI</key>
				<string>&lt;string&gt; - the screen it happened in</string>
			</dict>
		</dict>
		<key>ItemDetails:userPressedEmu</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.3.8</string>
			<key>description</key>
			<string>User tapped the Emu</string>
			<key>params</key>
			<dict>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
				<key>originUI</key>
				<string>&lt;string&gt; - the screen it happened in</string>
			</dict>
		</dict>
		<key>ItemDetails:userChoice</key>
		<dict>
			<key>androidRemark</key>
			<string>no such screen in android niy</string>
			<key>v</key>
			<string>1.3.8</string>
			<key>description</key>
			<string>User selected an option</string>
			<key>params</key>
			<dict>
				<key>choiceType</key>
				<string>&lt;string&gt; - the choice type the user selected</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
			</dict>
		</dict>
		<key>ItemDetails:favorite</key>
		<dict>
			<key>v</key>
			<string>2.0.8</string>
			<key>description</key>
			<string>User added emu to favorites</string>
			<key>params</key>
			<dict>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
				<key>originUI</key>
				<string>&lt;string&gt; - the screen it happened in</string>
			</dict>
		</dict>
		<key>Share:success</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>Sharing was successful. (Not related to any specific UI)</string>
			<key>params</key>
			<dict>
				<key>senderUI</key>
				<string>&lt;string&gt; - The originating UI the share was initated from. Emoticon screen, keyboard, etc.</string>
				<key>shareMethod</key>
				<string>&lt;string&gt; - the name of the method of sharing (application name, save to camera roll etc)</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
				<key>sharedMediaType</key>
				<string>&lt;string&gt; - the media type that was shared: gif, video etc.</string>
				<key>audioFileSet</key>
				<string>&lt;bool&gt; - true if an audio file was set for video rendering</string>
				<key>videoLoopsCountSet</key>
				<string>&lt;int&gt; - number of loops set for video rendering</string>
				<key>videoLoopTypeSet</key>
				<string>&lt;int&gt; - loop type set for video rendering</string>
			</dict>
			<key>fabric</key>
			<true/>
		</dict>
		<key>ShareFile:openedDlg</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.6.5</string>
			<key>description</key>
			<string>User pressed the three dots on share screen for &quot;open file in another app&quot;.</string>
			<key>params</key>
			<dict>
				<key>senderUI</key>
				<string>&lt;string&gt; - The originating UI the share was initated from. Emoticon screen, keyboard, etc.</string>
				<key>shareMethod</key>
				<string>&lt;string&gt; - the name of the method of sharing</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
				<key>sharedMediaType</key>
				<string>&lt;string&gt; - the media type that was shared: gif, video etc.</string>
			</dict>
		</dict>
		<key>ShareFile:dismissedDlg</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.6.5</string>
			<key>description</key>
			<string>Sharing was successful. (Not related to any specific UI)</string>
			<key>params</key>
			<dict>
				<key>recognizedApplication</key>
				<string>&lt;string&gt; - The identifier of the app opened (on the rare instance it is recognized. Most newer apps don&apos;t report this)</string>
				<key>senderUI</key>
				<string>&lt;string&gt; - The originating UI the share was initated from. Emoticon screen, keyboard, etc.</string>
				<key>shareMethod</key>
				<string>&lt;string&gt; - the name of the method of sharing</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
				<key>sharedMediaType</key>
				<string>&lt;string&gt; - the media type that was shared: gif, video etc.</string>
			</dict>
		</dict>
		<key>Share:failed</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>Sharing failed. (Not related to any specific UI)</string>
			<key>params</key>
			<dict>
				<key>senderUI</key>
				<string>&lt;string&gt; - The originating UI the share was initated from. Emoticon screen, keyboard, etc.</string>
				<key>shareMethod</key>
				<string>&lt;string&gt; - the name of the method of sharing (application name, save to camera roll etc)</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
				<key>sharedMediaType</key>
				<string>&lt;string&gt; - the media type that was shared: gif, video etc.</string>
			</dict>
		</dict>
		<key>Share:canceled</key>
		<dict>
			<key>androidRemark</key>
			<string>cannot implement this yet in android</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>Sharing was canceled by the user.</string>
			<key>params</key>
			<dict>
				<key>senderUI</key>
				<string>&lt;string&gt; - The originating UI the share was initated from. ShareVC, keyboard, etc.</string>
				<key>shareMethod</key>
				<string>&lt;string&gt; - the name of the method of sharing (application name, save to camera roll etc)</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
				<key>sharedMediaType</key>
				<string>&lt;string&gt; - the media type that was shared: gif, video etc.</string>
			</dict>
		</dict>
		<key>Share:app</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.7.6</string>
			<key>description</key>
			<string>User sent a link to the app on the app store.</string>
			<key>params</key>
			<dict>
				<key>senderUI</key>
				<string>&lt;string&gt; - The originating UI the share was initated from. Emoticon screen, keyboard, etc.</string>
				<key>shareMethod</key>
				<string>&lt;string&gt; - the name of the method of sharing (mail etc)</string>
			</dict>
			<key>fabric</key>
			<true/>
		</dict>
		<key>KB:didAppear</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>The keyboard appeared (event sent only when user actually enabled keyboard full access)</string>
		</dict>
		<key>KB:userPressedNextInputButton</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>User pressed the next input button (changed to another keyboard)</string>
		</dict>
		<key>KB:userPressedItem</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>User pressed one of the emoticons for copying</string>
			<key>params</key>
			<dict>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
			</dict>
		</dict>
		<key>KB:userPressedBackButton</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.0.8</string>
			<key>description</key>
			<string>User pressed one of the emoticons for copying</string>
			<key>params</key>
			<dict>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the related package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - the oid of the related package</string>
			</dict>
		</dict>
		<key>KB:selectedHashTag</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.7.6</string>
			<key>description</key>
			<string>User pressed one of the hashtags in the alpha numeric keyboard</string>
			<key>params</key>
			<dict>
				<key>hashtag</key>
				<string>&lt;string&gt; - the hashtag</string>
				<key>originUI</key>
				<string>&lt;string&gt; - the originating ui for this event</string>
				<key>isPackage</key>
				<string>&lt;bool&gt; - Yes if the hashtag is a name of a package</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - The oid of the selected package (in case that isPackage is true)</string>
			</dict>
		</dict>
		<key>KB:alphaNumericKBShown</key>
		<dict>
			<key>androidRemark</key>
			<string>niy</string>
			<key>v</key>
			<string>1.7.6</string>
			<key>description</key>
			<string>User opened the alpha numeric keyboard</string>
		</dict>
		<key>BE:zippedPackageDownloadSuccess</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.1.0</string>
			<key>description</key>
			<string>A zip file with resources for a package (that wasn&apos;t bundled with the app) downloaded to the device successfully</string>
			<key>params</key>
			<dict>
				<key>remoteURL</key>
				<string>&lt;string&gt; - the web url the file was downloaded from.</string>
				<key>localFileName</key>
				<string>&lt;string&gt; - the local file name.</string>
			</dict>
		</dict>
		<key>BE:zippedPackageDownloadFailed</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.1.0</string>
			<key>description</key>
			<string>A zip file with resources for a package (that wasn&apos;t bundled with the app) failed to download to the device</string>
			<key>params</key>
			<dict>
				<key>remoteURL</key>
				<string>&lt;string&gt; - the web url the file was downloaded from.</string>
				<key>localFileName</key>
				<string>&lt;string&gt; - the local file name.</string>
				<key>error</key>
				<string>&lt;string&gt; - description of the error</string>
			</dict>
		</dict>
		<key>BE:zippedPackageUnzipSuccess</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.2.0</string>
			<key>description</key>
			<string>A zip file with resources for a package was unzipped successfully</string>
			<key>params</key>
			<dict>
				<key>localFileName</key>
				<string>&lt;string&gt; - the local file name.</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the package</string>
			</dict>
		</dict>
		<key>BE:zippedPackageUnzipFailed</key>
		<dict>
			<key>deprecated_ios</key>
			<string>2.0.5</string>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.2.0</string>
			<key>description</key>
			<string>A zip file with resources for a package failed to unzip</string>
			<key>params</key>
			<dict>
				<key>localFileName</key>
				<string>&lt;string&gt; - the local file name.</string>
				<key>packageName</key>
				<string>&lt;string&gt; - the name of the package</string>
				<key>error</key>
				<string>&lt;string&gt; - description of the error</string>
			</dict>
		</dict>
		<key>BE:backgroundFetch</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string>1.2.7</string>
			<key>description</key>
			<string>Background fetch</string>
			<key>params</key>
			<dict>
				<key>resultType</key>
				<string>&lt;string&gt; - the result type of the fetch. Possible values:
 failed - the fetch failed
 newData - fetch success and new packages available
 noNewData - fetch success but no new packages available</string>
				<key>packageOID</key>
				<string>&lt;string&gt; - (optional) oid of a package, if user notified about that newly available package.</string>
				<key>packageName</key>
				<string>&lt;string&gt; - (optional) name of a package, if user notified about that newly available package.</string>
			</dict>
		</dict>
		<key>Footage:screenAppeared</key>
		<dict>
			<key>av</key>
			<string>1.0.8</string>
			<key>v</key>
			<string></string>
			<key>description</key>
			<string>User opened the user&apos;s takes screen</string>
			<key>params</key>
			<dict>
				<key>packageOID</key>
				<string>&lt;string&gt; - (optional) oid of a package, if user opened the screen from a context of a pack.</string>
				<key>packageName</key>
				<string>&lt;string&gt; - (optional) name of a package, if user opened the screen from a context of a pack.</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - (optional) the name of the related emoticon (if user opened the screen from a context of a specific emu)</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - (optional) the oid of the related emoticon (if user opened the screen from a context of a specific emu)</string>
				<key>originUI</key>
				<string>&lt;string&gt; - The UI the screen was opened from (items, itemDetails, KB etc).</string>
			</dict>
		</dict>
		<key>Footage:screenCancel</key>
		<dict>
			<key>av</key>
			<string>1.0.8</string>
			<key>v</key>
			<string></string>
			<key>description</key>
			<string>User dismissed the takes screen</string>
			<key>params</key>
			<dict>
				<key>packageOID</key>
				<string>&lt;string&gt; - (optional) oid of a package, if user opened the screen from a context of a pack.</string>
				<key>packageName</key>
				<string>&lt;string&gt; - (optional) name of a package, if user opened the screen from a context of a pack.</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - (optional) the name of the related emoticon (if user opened the screen from a context of a specific emu)</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - (optional) the oid of the related emoticon (if user opened the screen from a context of a specific emu)</string>
				<key>originUI</key>
				<string>&lt;string&gt; - The UI the screen was opened from (items, itemDetails, KB etc).</string>
			</dict>
		</dict>
		<key>Footage:deleted</key>
		<dict>
			<key>av</key>
			<string>1.0.0</string>
			<key>v</key>
			<string></string>
			<key>description</key>
			<string>User deleted a footage</string>
			<key>params</key>
			<dict>
				<key>packageOID</key>
				<string>&lt;string&gt; - (optional) oid of a package, if user opened footages screen from a context of a pack.</string>
				<key>packageName</key>
				<string>&lt;string&gt; - (optional) name of a package, if user opened footages screen from a context of a pack.</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - (optional) the name of the related emoticon (if user opened footages screen from a context of a specific emu)</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - (optional) the oid of the related emoticon (if user opened footages screen from a context of a specific emu)</string>
				<key>originUI</key>
				<string>&lt;string&gt; - The UI the screen was opened from (items, itemDetails, KB etc).</string>
			</dict>
		</dict>
		<key>Footage:appliedToEmu</key>
		<dict>
			<key>av</key>
			<string>1.0.8</string>
			<key>v</key>
			<string></string>
			<key>description</key>
			<string>User applied take to a specific emu</string>
			<key>params</key>
			<dict>
				<key>packageOID</key>
				<string>&lt;string&gt; - oid of a package</string>
				<key>packageName</key>
				<string>&lt;string&gt; - name of a package</string>
				<key>emuticonName</key>
				<string>&lt;string&gt; - the name of the related emoticon</string>
				<key>emuticonOID</key>
				<string>&lt;string&gt; - the oid of the related emoticon</string>
				<key>originUI</key>
				<string>&lt;string&gt; - The UI the screen was opened from (items, itemDetails, KB etc).</string>
			</dict>
		</dict>
		<key>Footage:appliedToPack</key>
		<dict>
			<key>androidRemarks</key>
			<string>niy</string>
			<key>v</key>
			<string></string>
			<key>description</key>
			<string>User applied take to a whole pack (this event will be deprecated soon)</string>
			<key>params</key>
			<dict>
				<key>packageOID</key>
				<string>&lt;string&gt; - oid of a package</string>
				<key>packageName</key>
				<string>&lt;string&gt; - name of a package</string>
				<key>originUI</key>
				<string>&lt;string&gt; - The UI the screen was opened from (items, itemDetails, KB etc).</string>
			</dict>
		</dict>
		<key>Footage:appliedToAll</key>
		<dict>
			<key>androidRemarks</key>
			<string>niy</string>
			<key>v</key>
			<string></string>
			<key>description</key>
			<string>User applied footage to all packs (this event will be deprecated soon)</string>
			<key>params</key>
			<dict>
				<key>packageOID</key>
				<string>&lt;string&gt; - oid of a package</string>
				<key>packageName</key>
				<string>&lt;string&gt; - name of a package</string>
				<key>originUI</key>
				<string>&lt;string&gt; - The UI the screen was opened from (items, itemDetails, KB etc).</string>
			</dict>
		</dict>
		<key>Footage:changedDefault</key>
		<dict>
			<key>androidRemarks</key>
			<string>niy</string>
			<key>v</key>
			<string></string>
			<key>description</key>
			<string>User applied take to all unlocked </string>
		</dict>
	</dict>
	<key>eventsCategories</key>
	<dict>
		<key>Footage</key>
		<string>Takes selection / editing / deleting screen</string>
		<key>App</key>
		<string>Application</string>
		<key>FBM</key>
		<string>Facebook messanger</string>
		<key>Notifications</key>
		<string>Notifications related</string>
		<key>Settings</key>
		<string>Application settings</string>
		<key>Rec</key>
		<string>Recorder</string>
		<key>Items</key>
		<string>Main emus screen / feed</string>
		<key>ItemDetails</key>
		<string>Specific emu details screen</string>
		<key>Share</key>
		<string>Share related events</string>
		<key>ShareFile</key>
		<string>(deprecated)</string>
		<key>KB</key>
		<string>Keyboard</string>
		<key>BE</key>
		<string>Back end events</string>
		<key>DeepLink</key>
		<string>Deep links related events</string>
		<key>ME</key>
		<string>Me screen</string>
		<key>IAP</key>
		<string>In App Purchases</string>
	</dict>
</dict>
</plist>
